name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      elasticsearch:
        image: elasticsearch:6.8.8
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10
        ports:
          - "9200:9200"

    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build
        run: go build -v .

      - name: Setup test dependencies
        run: |
          docker-compose -f docker-compose.test.yml up -d mongo1 mongo2 mongo3
          docker-compose -f docker-compose.test.yml exec -T mongo1 mongo --eval "rs.initiate(
            {
              _id : 'rs0',
              members: [
                { _id : 0, host : 'mongo1:27017' },
                { _id : 1, host : 'mongo2:27017' },
                { _id : 2, host : 'mongo3:27017' }
              ]
            }
          )"
          sudo echo "127.0.0.1 mongo1
          127.0.0.1 mongo2
          127.0.0.1 mongo3" | sudo tee -a /etc/hosts

      - name: Test
        run: go test -v .
        env:
          MONGO_URL: mongodb://mongo1:27017,mongo2:27018,mongo3:27019/?replicaSet=rs0&readPreference=primary
